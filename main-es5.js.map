{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/card-pokemon/card-pokemon.component.ts","webpack:///src/app/card-pokemon/card-pokemon.component.html","webpack:///src/app/pokomons.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_pokomonsService","allPokemons","offset","pokemons","search","disableNext","getPokemons","subscribe","response","results","map","pokemon","index","Number","filter","name","indexOf","makeResult","value","toLowerCase","result","previousPage","changeSearch","nextPage","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CardPokemonComponent","spriteURL","PokomonsService","_httpClient","get","serverUrl","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { PokomonsService } from './pokomons.service';\nimport { Pokemon } from './models/Pokemon.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private allPokemons: Array<Pokemon> = [];\n  \n  public offset: number = 0;\n  public pokemons: Array<Pokemon> = [];\n  public search: string = '';\n  public disableNext: Boolean = false;\n\n  constructor(\n    private _pokomonsService: PokomonsService,\n  ) { }\n\n  ngOnInit() {\n    this._pokomonsService.getPokemons()\n    .subscribe(response => {\n      this.allPokemons = response.results\n        .map((pokemon, index) => ({ ...pokemon, id: Number(index) + 1 }))\n        .filter(pokemon => pokemon.name.indexOf('-') < 0);\n      this.makeResult()\n    })\n  }\n\n  nextPage() {\n    this.offset += 20;\n    this.makeResult();\n  }\n\n  previousPage() {\n    this.offset -= 20;\n    this.makeResult();\n  }\n\n  changeSearch(value) {\n    this.search = value;\n    this.offset = 0;\n    this.makeResult();\n  }\n\n  private makeResult() {\n    this.pokemons = this.allPokemons\n      .filter(pokemon => \n        !this.search || \n        this.search === '' ||\n        pokemon.name.toLowerCase().indexOf(this.search.toLowerCase()) > -1\n      )\n      .filter((pokemon, index) => {\n        const result = index >= this.offset && index < 20 + this.offset\n        this.disableNext = index < 20 + this.offset\n        return result;\n      });\n  }\n\n}\n","<div class=\"app-container\">\n  <div class=\"actions\">\n    <button (click)=\"previousPage()\" [disabled]=\"offset === 0\" type=\"button\" class=\"btn btn-primary\">Anterior</button>\n    <input [ngModel]=\"search\" (ngModelChange)=\"changeSearch($event)\" type=\"text\" class=\"form-control\" placeholder=\"Buscar pokemon\" >\n    <button (click)=\"nextPage()\" type=\"button\" class=\"btn btn-primary\" [disabled]=\"disableNext\">Proximo</button>\n  </div>\n  <div class=\"content\">\n    <app-card-pokemon *ngFor=\"let pokemon of pokemons\" [pokemon]=\"pokemon\">\n    </app-card-pokemon>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CardPokemonComponent } from './card-pokemon/card-pokemon.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardPokemonComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Pokemon } from '../models/Pokemon.model'\n\n@Component({\n  selector: 'app-card-pokemon',\n  templateUrl: './card-pokemon.component.html',\n  styleUrls: ['./card-pokemon.component.css']\n})\nexport class CardPokemonComponent implements OnInit {\n\n  @Input() pokemon: Pokemon; \n\n  public spriteURL: string;\n\n  constructor() { }\n  \n  ngOnInit(): void {\n    if (this.pokemon)\n      this.spriteURL = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${this.pokemon.id}.png?raw=true`\n  }\n\n}\n","<div class=\"card-pokemon-container\">\n  <img \n    [src]=\"spriteURL\" \n    alt=\"{{ pokemon.name }}\" \n  />\n  <span>{{ pokemon.name }}</span>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokomonsService {\n\n  constructor(\n    private _httpClient: HttpClient\n  ) { \n  }\n\n  getPokemons(): Observable<any>\n  {\n    return this._httpClient.get<any>(`${environment.serverUrl}/pokemon?limit=1118`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'https://pokeapi.co/api/v2'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}